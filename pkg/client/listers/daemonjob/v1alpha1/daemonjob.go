/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/myoperator/jobflowoperator/pkg/apis/daemonjob/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DaemonJobLister helps list DaemonJobs.
// All objects returned here must be treated as read-only.
type DaemonJobLister interface {
	// List lists all DaemonJobs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DaemonJob, err error)
	// DaemonJobs returns an object that can list and get DaemonJobs.
	DaemonJobs(namespace string) DaemonJobNamespaceLister
	DaemonJobListerExpansion
}

// daemonJobLister implements the DaemonJobLister interface.
type daemonJobLister struct {
	indexer cache.Indexer
}

// NewDaemonJobLister returns a new DaemonJobLister.
func NewDaemonJobLister(indexer cache.Indexer) DaemonJobLister {
	return &daemonJobLister{indexer: indexer}
}

// List lists all DaemonJobs in the indexer.
func (s *daemonJobLister) List(selector labels.Selector) (ret []*v1alpha1.DaemonJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DaemonJob))
	})
	return ret, err
}

// DaemonJobs returns an object that can list and get DaemonJobs.
func (s *daemonJobLister) DaemonJobs(namespace string) DaemonJobNamespaceLister {
	return daemonJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DaemonJobNamespaceLister helps list and get DaemonJobs.
// All objects returned here must be treated as read-only.
type DaemonJobNamespaceLister interface {
	// List lists all DaemonJobs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DaemonJob, err error)
	// Get retrieves the DaemonJob from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.DaemonJob, error)
	DaemonJobNamespaceListerExpansion
}

// daemonJobNamespaceLister implements the DaemonJobNamespaceLister
// interface.
type daemonJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DaemonJobs in the indexer for a given namespace.
func (s daemonJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DaemonJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DaemonJob))
	})
	return ret, err
}

// Get retrieves the DaemonJob from the indexer for a given namespace and name.
func (s daemonJobNamespaceLister) Get(name string) (*v1alpha1.DaemonJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("daemonjob"), name)
	}
	return obj.(*v1alpha1.DaemonJob), nil
}
